{"version":3,"sources":["webpack://backend/webpack/bootstrap","webpack://backend/./backend/src/common/utils.js","webpack://backend/./backend/src/main.js","webpack://backend/./backend/src/config/config.js","webpack://backend/./backend/src/config/locales.js","webpack://backend/./backend/src/config/locale/zh-cn.js","webpack://backend/./backend/src/config/errors.js","webpack://backend/./backend/src/config/middlewares.js","webpack://backend/./backend/src/config/middleware/captchaContainer.js","webpack://backend/./backend/src/config/middleware/adapter/captchaContainer.js","webpack://backend/./backend/src/config/middleware/captchaVerify.js","webpack://backend/./backend/src/routes.js","webpack://backend/./backend/src/controller/version.js","webpack://backend/./backend/src/controller/captcha.js","webpack://backend/./backend/src/services.js","webpack://backend/./backend/src/service/version.js","webpack://backend/./backend/src/service/captcha.js","webpack://backend/./backend/src/models.js","webpack://backend/./backend/src/meta.js","webpack://backend/./backend/src/config/validation/schemas.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;AClFA;AACA,eAAe,OAAO;AACtB,sBAAsB,QAAQ;AAC9B,GAAG;AACH;;;;;;;ACJA,eAAe,mBAAO,CAAC,CAAoB;AAC3C,gBAAgB,mBAAO,CAAC,CAAqB;AAC7C,eAAe,mBAAO,CAAC,CAAoB;AAC3C,oBAAoB,mBAAO,CAAC,CAAyB;;AAErD;;AAEA;AACA,iBAAiB,mBAAO,CAAC,EAAa;AACtC;AACA,mBAAmB,mBAAO,CAAC,EAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,EAAa;AACtC;AACA,eAAe,mBAAO,CAAC,EAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC5BA;AACA,WAAW,mBAAO,CAAC,CAAmB;AACtC;;;;;;;ACFA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;;;;;;;ACFA,yBAAyB,mBAAO,CAAC,CAAkC;AACnE,sBAAsB,mBAAO,CAAC,CAA+B;;AAE7D;AACA;AACA;AACA;;;;;;;ACNA;AACA,2BAA2B,mBAAO,CAAC,CAA+B;AAClE;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;;;;;;ACpBA,cAAc,mBAAO,CAAC,CAA0B;;AAEhD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACvCA,cAAc,mBAAO,CAAC,CAAuB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;ACrDA,gBAAgB,mBAAO,CAAC,EAAyB;AACjD,gBAAgB,mBAAO,CAAC,EAAyB;;AAEjD;AACA;AACA;AACA,KAAK,oFAAoF;AACzF,KAAK,kFAAkF;AACvF,KAAK,iFAAiF;AACtF;AACA,KAAK,mEAAmE;AACxE;AACA;AACA;;;;;;;ACbA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACpBA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;;;;;ACZA,gBAAgB,mBAAO,CAAC,EAAsB;AAC9C,gBAAgB,mBAAO,CAAC,EAAsB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;AChBA,cAAc,mBAAO,CAAC,CAAoB;;AAE1C;;AAEA;;AAEA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO;AAC5C,wCAAwC,WAAW;AACnD;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA,kBAAkB,mBAAO,CAAC,EAAgC;AAC1D;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP,kBAAkB;AAClB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = {\n  getCacheKey({ user }) {\n    return `captcha:${user.id}`;\n  },\n};\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\nconst middlewares = require('./config/middlewares.js');\n\nmodule.exports = app => {\n\n  // routes\n  const routes = require('./routes.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    routes,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    middlewares,\n    meta,\n  };\n\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n\n  // middlewares\n  config.middlewares = {\n    captchaContainer: {\n      global: false,\n      dependencies: 'cachedb',\n    },\n    captchaVerify: {\n      global: false,\n      dependencies: 'auth,cachedb',\n    },\n  };\n\n  // provider\n  config.provider = {\n    module: 'a-captchasimple',\n    name: 'simple',\n  };\n\n  // cache timeout\n  config.cache = {\n    timeout: 20 * 60 * 1000,\n  };\n\n  return config;\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = {\n  'Mismatch Captcha Code': '验证码不匹配',\n  'Verification code is invalid, please retrieve again': '验证码已失效，请重新获取',\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","const captchaContainer = require('./middleware/captchaContainer.js');\nconst captchaVerify = require('./middleware/captchaVerify.js');\n\nmodule.exports = {\n  captchaContainer,\n  captchaVerify,\n};\n","// captchaContainer\nconst CaptchaContainerFn = require('./adapter/captchaContainer.js');\nconst CaptchaController = Symbol('CTX#__CaptchaController');\n\n\nmodule.exports = () => {\n  return async function captchaContainer(ctx, next) {\n    ctx.meta = ctx.meta || {};\n    // captchaContainer\n    Object.defineProperty(ctx.meta, 'captcha', {\n      get() {\n        if (ctx.meta[CaptchaController] === undefined) {\n          ctx.meta[CaptchaController] = new (CaptchaContainerFn(ctx))();\n        }\n        return ctx.meta[CaptchaController];\n      },\n    });\n    // next\n    await next();\n  };\n};\n","const utils = require('../../../common/utils.js');\n\nconst Fn = module.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class CaptchaContainer {\n\n    constructor(moduleName) {\n      this.moduleName = moduleName || ctx.module.info.relativeName;\n    }\n\n    // other module's mail\n    module(moduleName) {\n      return new (Fn(ctx))(moduleName);\n    }\n\n    // save\n    async save({ provider, code }) {\n      // config\n      const config = ctx.config.module(moduleInfo.relativeName);\n      // cache\n      const cache = ctx.cache.db.module(moduleInfo.relativeName);\n      // timeout\n      const timeout = config.cache.timeout;\n      // user\n      const user = ctx.user.agent;\n      // get\n      const key = utils.getCacheKey({ user });\n      const value = await cache.get(key);\n      console.log(value);\n      if (!value) ctx.throw(403);\n      // verify provider\n      if (provider.module !== value.provider.module || provider.name !== value.provider.name) ctx.throw(403);\n      // save\n      value.code = code;\n      await cache.set(key, value, timeout);\n    }\n\n  }\n  return CaptchaContainer;\n};\n","const utils = require('../../common/utils.js');\n\nmodule.exports = (options, app) => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  return async function captchaVerify(ctx, next) {\n    // config\n    const config = ctx.config.module(moduleInfo.relativeName);\n    // cache\n    const cache = ctx.cache.db.module(moduleInfo.relativeName);\n    // timeout\n    const timeout = config.cache.timeout;\n    // user\n    const user = ctx.user.agent;\n    // get\n    const key = utils.getCacheKey({ user });\n    const value = await cache.get(key);\n    if (!value || !value.code) {\n      // error\n      throw combineCaptchaError({\n        message: ctx.text('Verification code is invalid, please retrieve again'),\n      });\n    }\n    // verify\n    if (ctx.request.body.captcha.code !== value.code) {\n      // error\n      throw combineCaptchaError({\n        message: ctx.text('Mismatch Captcha Code'),\n      });\n    }\n    // clear\n    // await cache.remove(key);\n    value.code = undefined;\n    await cache.set(key, value, timeout);\n\n    // next\n    await next();\n  };\n};\n\nfunction combineCaptchaError({ message }) {\n  // error\n  const error = new Error();\n  error.code = 422;\n  error.message = [\n    {\n      keyword: 'x-captcha',\n      params: [],\n      message,\n      dataPath: '/captcha/code',\n      schemaPath: '#/properties/captcha/code/x-captcha',\n    },\n  ];\n  return error;\n}\n","const version = require('./controller/version.js');\nconst captcha = require('./controller/captcha.js');\n\nmodule.exports = app => {\n  const routes = [\n    // version\n    { method: 'post', path: 'version/update', controller: version, middlewares: 'inner' },\n    { method: 'post', path: 'version/init', controller: version, middlewares: 'inner' },\n    { method: 'post', path: 'version/test', controller: version, middlewares: 'test' },\n    // captcha\n    { method: 'post', path: 'captcha/getProvider', controller: captcha },\n  ];\n  return routes;\n};\n","module.exports = app => {\n  class VersionController extends app.Controller {\n\n    async update() {\n      await this.service.version.update(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async init() {\n      await this.service.version.init(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async test() {\n      await this.service.version.test(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n  }\n  return VersionController;\n};\n","module.exports = app => {\n  class CaptchaController extends app.Controller {\n\n    async getProvider() {\n      const res = await this.service.captcha.getProvider({\n        user: this.ctx.user.agent,\n      });\n      this.ctx.success(res);\n    }\n\n  }\n  return CaptchaController;\n};\n","const version = require('./service/version.js');\nconst captcha = require('./service/captcha.js');\n\nmodule.exports = app => {\n  const services = {\n    version,\n    captcha,\n  };\n  return services;\n};\n","module.exports = app => {\n\n  class Version extends app.Service {\n\n    async update(options) {\n    }\n\n    async init(options) {\n    }\n\n    async test() {\n    }\n\n  }\n\n  return Version;\n};\n","const utils = require('../common/utils.js');\n\nmodule.exports = app => {\n\n  class Captcha extends app.Service {\n\n    async getProvider({ user }) {\n      // timeout\n      const timeout = this.ctx.config.cache.timeout;\n      // provider\n      const provider = this.ctx.config.provider;\n      // cache\n      const key = utils.getCacheKey({ user });\n      await this.ctx.cache.db.set(key, { provider }, timeout);\n      // ok\n      return { provider };\n    }\n\n  }\n\n  return Captcha;\n};\n","module.exports = app => {\n  const models = {\n  };\n  return models;\n};\n","module.exports = app => {\n  const schemas = require('./config/validation/schemas.js')(app);\n  const meta = {\n    base: {\n      atoms: {\n      },\n      functions: {\n      },\n    },\n    validation: {\n      validators: {\n      },\n      keywords: {},\n      schemas: {\n      },\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  const schemas = {};\n  return schemas;\n};\n"],"sourceRoot":""}